name: C/C++ mac

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Install
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" 
          brew update
          brew upgrade gettext autoconf libtool 
          brew install automake
          brew install texinfo
          makeinfo --version
      - uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # 缓存的键，用于区分不同的缓存项
          path: download
          key: ${{ runner.os }}-download
      - name: configure
        run: mkdir build; cd build;cmake .. -DCMAKE_INSTALL_PREFIX=dist
      - name: make
        run: cd build; make
  save_cache_job:
    # depends-on: build  # Ensure this job runs after the first job
    runs-on: macos-latest

    steps:
      # Post step to save the cache regardless of job status
      - name: Save cache regardless of job status
        if: always()  # This ensures the step is executed regardless of job status
        run: |
          # This step is empty as it doesn't need to do anything
          # The existence of this step with `if: always()` ensures the cache will be saved even if the job fails