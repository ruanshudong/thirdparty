name: C/C++ linux

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install
        run: |
          sudo apt-get update && sudo apt-get install gperf gettext automake autoconf libtool build-essential -y
          autoconf --version
          automake --version
          aclocal --version
      - uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # 缓存的键，用于区分不同的缓存项
          path: download
          key: ${{ runner.os }}-download
      - name: configure
        run: mkdir build; cd build;cmake .. -DCMAKE_INSTALL_PREFIX=dist
      - name: make
        run: cd build; make
      - name: Set environment variable
        run: echo "VERSION=$(echo ${GITHUB_REF} | cut -d'/' -f3)" >> $GITHUB_ENV        
      - name: Compress build output
        run: |
          tar czf dist-${{ runner.os }}-$VERSION.tgz build/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release $VERSION
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: sekwah41/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist-${{ runner.os }}-$VERSION.tgz
          asset_name: dist-${{ runner.os }}-$VERSION.tgz        
  save_cache_job:
    needs: build  # Ensure this job runs after the first job
    runs-on: ubuntu-latest

    steps:
      # Post step to save the cache regardless of job status
      - name: Save cache regardless of job status
        if: always()  # This ensures the step is executed regardless of job status
        run: |
          # This step is empty as it doesn't need to do anything
          # The existence of this step with `if: always()` ensures the cache will be saved even if the job fails