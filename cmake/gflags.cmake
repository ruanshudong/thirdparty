

set(LIB_GFLAGS "gflags")
if(MSVC)
ExternalProject_Add(ADD_${LIB_GFLAGS}
        URL ${THIRDPARTY_URL}/gflag-${GFLAGS_VERSION}.tar.gz
        DOWNLOAD_DIR ${CMAKE_SOURCE_DIR}/download
        PREFIX ${CMAKE_BINARY_DIR}
        INSTALL_DIR ${CMAKE_SOURCE_DIR}
        CONFIGURE_COMMAND ${CMAKE_COMMAND} . -T${MSVC_TOOLSET_VERSION} -DCMAKE_INSTALL_PREFIX=${THIRDPARTY_PATH}/${LIB_GFLAGS}-${GFLAGS_VERSION}
        SOURCE_DIR ${THIRDPARTY_PATH}/${LIB_GFLAGS}-lib
        BUILD_IN_SOURCE 1
        BUILD_COMMAND ${CMAKE_COMMAND} --build . --config release --target ALL_BUILD -- /maxcpucount:4
        URL_MD5 ${GFLAGS_MD5}
        )
else(MSVC)
ExternalProject_Add(ADD_${LIB_GFLAGS}
        URL ${THIRDPARTY_URL}/gflag-${GFLAGS_VERSION}.tar.gz
        DOWNLOAD_DIR ${CMAKE_SOURCE_DIR}/download
        PREFIX ${CMAKE_BINARY_DIR}
        INSTALL_DIR ${CMAKE_SOURCE_DIR}
        CONFIGURE_COMMAND ${CMAKE_COMMAND} . -DCMAKE_INSTALL_PREFIX=${THIRDPARTY_PATH}/${LIB_GFLAGS}-${GFLAGS_VERSION}
        SOURCE_DIR ${THIRDPARTY_PATH}/${LIB_GFLAGS}-lib
        BUILD_IN_SOURCE 1
        BUILD_COMMAND make
        URL_MD5 ${GFLAGS_MD5}
        )
endif(MSVC)
        
install(DIRECTORY ${THIRDPARTY_PATH}/${LIB_GFLAGS}-${GFLAGS_VERSION} USE_SOURCE_PERMISSIONS DESTINATION ${CMAKE_INSTALL_PREFIX})
INSTALL(CODE "EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_INSTALL_PREFIX}/${LIB_GFLAGS}-${GFLAGS_VERSION} ${CMAKE_INSTALL_PREFIX}/${LIB_GFLAGS})")
