
set(LIB_JSONCPP "jsoncpp")

if(MSVC)
ExternalProject_Add(ADD_${LIB_JSONCPP}
        URL ${THIRDPARTY_URL}/jsoncpp-${JSONCPP_VERSION}.tar.gz
        DOWNLOAD_DIR ${CMAKE_SOURCE_DIR}/download
        PREFIX ${CMAKE_BINARY_DIR}
        INSTALL_DIR ${CMAKE_SOURCE_DIR}
        CONFIGURE_COMMAND ${CMAKE_COMMAND} ${THIRDPARTY_PATH}/${LIB_JSONCPP}-lib -T${MSVC_TOOLSET_VERSION} -DCMAKE_INSTALL_PREFIX=${THIRDPARTY_PATH}/${LIB_JSONCPP}-${JSONCPP_VERSION} -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DBUILD_TESTING=OFF -DJSONCPP_WITH_EXAMPLE=OFF -DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF -DJSONCPP_WITH_TESTS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        SOURCE_DIR ${THIRDPARTY_PATH}/${LIB_JSONCPP}-lib
        BUILD_IN_SOURCE 1
        BUILD_COMMAND ${CMAKE_COMMAND} --build . --config release --target ALL_BUILD -- /maxcpucount:4
        URL_MD5 ${JSONCPP_MD5}
#        URL_MD5 d6c8c609f2162eff373db62b90a051c7
        )
else(MSVC)
ExternalProject_Add(ADD_${LIB_JSONCPP}
        URL ${THIRDPARTY_URL}/jsoncpp-${JSONCPP_VERSION}.tar.gz
        DOWNLOAD_DIR ${CMAKE_SOURCE_DIR}/download
        PREFIX ${CMAKE_BINARY_DIR}
        INSTALL_DIR ${CMAKE_SOURCE_DIR}
        CONFIGURE_COMMAND ${CMAKE_COMMAND} ${THIRDPARTY_PATH}/${LIB_JSONCPP}-lib -DCMAKE_INSTALL_PREFIX=${THIRDPARTY_PATH}/${LIB_JSONCPP}-${JSONCPP_VERSION} -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DBUILD_TESTING=OFF -DJSONCPP_WITH_EXAMPLE=OFF -DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF -DJSONCPP_WITH_TESTS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        SOURCE_DIR ${THIRDPARTY_PATH}/${LIB_JSONCPP}-lib
        BUILD_IN_SOURCE 0
        BUILD_COMMAND make
        URL_MD5 ${JSONCPP_MD5}
#        URL_MD5 d6c8c609f2162eff373db62b90a051c7
        )
endif(MSVC)

add_dependencies(thirdparty ADD_${LIB_JSONCPP})

install(DIRECTORY ${THIRDPARTY_PATH}/${LIB_JSONCPP}-${JSONCPP_VERSION} USE_SOURCE_PERMISSIONS DESTINATION ${CMAKE_INSTALL_PREFIX})
INSTALL(CODE "EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_INSTALL_PREFIX}/${LIB_JSONCPP}-${JSONCPP_VERSION} ${CMAKE_INSTALL_PREFIX}/${LIB_JSONCPP})")

